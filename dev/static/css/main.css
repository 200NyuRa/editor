/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Remove margin
 */
figure {
  margin: 0;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

fieldset {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/* Blockquote
   ========================================================================== */
blockquote {
  margin: 0;
}

*,
*:after,
*:before {
  box-sizing: border-box;
}

@font-face {
  font-family: "Arial";
  src: url("../fonts/Arial/Arial.woff2") format("woff2"), url("../fonts/Arial/Arial.woff") format("woff");
  font-weight: 700;
  font-style: normal;
}

@font-face {
  font-family: "OpenSans";
  src: local("OpenSans-Bold"), local("Open Sans Bold"), local("Open-Sans-Bold");
  src: url("../fonts/OpenSans-Bold/OpenSans-Bold.woff2") format("woff2"), url("../fonts/OpenSans-Bold/OpenSans-Bold.woff") format("woff");
  font-weight: 700;
  font-style: normal;
}

body {
  font-family: "OpenSans", "Helvetica", sans-serif;
  font-weight: 700;
  font-style: normal;
  background: #fff;
  color: rgba(0, 0, 0, 0.6);
  letter-spacing: .3px;
}

.field__input {
  font-size: 12px;
  line-height: 1.5;
}

body, .label, .field-swich__label {
  font-size: 14px;
  line-height: 1.43;
}

.title {
  font-size: 22px;
  line-height: 1.16;
}

.btn {
  font-size: 14px;
  line-height: 1.29;
}

a {
  text-decoration: none;
  color: #0d0e10;
}

ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  line-height: inherit;
  font-weight: inherit;
  padding: 0;
  margin: 0;
}

p {
  margin: 0;
  padding: 0;
}

/*
 *  Owl Carousel - Animate Plugin
 */
.owl-carousel.animated {
  -webkit-animation-duration: 1000ms;
  animation-duration: 1000ms;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both;
}

.owl-carousel .owl-animated-in {
  z-index: 0;
}

.owl-carousel .owl-animated-out {
  z-index: 1;
}

.owl-carousel .fadeIn {
  -webkit-animation-name: slideOutDown;
  animation-name: slideOutDown;
}

/*
 * 	Owl Carousel - Auto Height Plugin
 */
.owl-height {
  -webkit-transition: height 500ms ease-in-out;
  transition: height 500ms ease-in-out;
}

/*
 *  Core Owl Carousel CSS File
 */
.owl-carousel {
  /* position relative and z-index fix webkit rendering fonts issue */
  position: relative;
  z-index: 1;
  display: none;
  width: 100%;
  -webkit-tap-highlight-color: transparent;
}

.owl-carousel .owl-stage {
  position: relative;
  -ms-touch-action: pan-Y;
}

.owl-carousel .owl-stage:after {
  content: ".";
  display: block;
  clear: both;
  height: 0;
  line-height: 0;
  visibility: hidden;
}

.owl-carousel .owl-stage-outer {
  position: relative;
  overflow: hidden;
  /* fix for flashing background */
  -webkit-transform: translate3d(0px, 0px, 0px);
}

.owl-carousel .owl-item {
  position: relative;
  float: left;
  min-height: 1px;
  -webkit-backface-visibility: hidden;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}

.owl-carousel .owl-item img {
  display: block;
  width: 100%;
  -webkit-transform-style: preserve-3d;
}

.owl-carousel .owl-nav.disabled,
.owl-carousel .owl-dots.disabled {
  display: none;
}

.owl-carousel .owl-nav .owl-prev,
.owl-carousel .owl-nav .owl-next,
.owl-carousel .owl-dot {
  cursor: pointer;
  cursor: hand;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -khtml-user-select: none;
}

.owl-carousel.owl-loaded {
  display: block;
}

.owl-carousel.owl-loading {
  display: block;
  opacity: 0;
}

.owl-carousel.owl-hidden {
  opacity: 0;
}

.owl-carousel.owl-refresh .owl-item {
  display: none;
}

.owl-carousel.owl-drag .owl-item {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.owl-carousel.owl-grab {
  cursor: move;
  cursor: -webkit-grab;
  cursor: -o-grab;
  cursor: -ms-grab;
  cursor: grab;
}

.owl-carousel.owl-rtl {
  direction: rtl;
}

.owl-carousel.owl-rtl .owl-item {
  float: right;
}

/* No Js */
.no-js .owl-carousel {
  display: block;
}

/*
 * 	Owl Carousel - Lazy Load Plugin
 */
.owl-carousel .owl-item .owl-lazy {
  opacity: 0;
  -webkit-transition: opacity 400ms ease;
  transition: opacity 400ms ease;
}

.owl-carousel .owl-item img {
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d;
}

/*
 * 	Owl Carousel - Video Plugin
 */
.owl-carousel .owl-video-wrapper {
  position: relative;
  height: 100%;
  background: #000;
}

.owl-carousel .owl-video-play-icon {
  position: absolute;
  top: 50%;
  left: 50%;
  z-index: 1;
  width: 80px;
  height: 80px;
  margin-top: -40px;
  margin-left: -40px;
  background: url("owl.video.play.png") no-repeat;
  -webkit-backface-visibility: hidden;
  cursor: pointer;
  -webkit-transition: scale 100ms ease;
  transition: scale 100ms ease;
}

.owl-carousel .owl-video-play-icon:hover {
  -webkit-transition: scale(1.3, 1.3);
  transition: scale(1.3, 1.3);
}

.owl-carousel .owl-video-playing .owl-video-tn,
.owl-carousel .owl-video-playing .owl-video-play-icon {
  display: none;
}

.owl-carousel .owl-video-tn {
  height: 100%;
  background-repeat: no-repeat;
  background-position: center center;
  background-size: contain;
  opacity: 0;
  -webkit-transition: opacity 400ms ease;
  transition: opacity 400ms ease;
}

.owl-carousel .owl-video-frame {
  position: relative;
  z-index: 1;
  width: 100%;
  height: 100%;
}

.btn {
  display: inline-block;
  padding: 10px;
  width: 150px;
  cursor: pointer;
  font-family: "OpenSans", "Helvetica", sans-serif;
  letter-spacing: .3px;
  border: none;
  outline: 0;
  border-radius: 3px;
  box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.02);
  color: #fff;
  -webkit-transition: background-color .3s linear;
  transition: background-color .3s linear;
}

.btn_number {
  position: absolute;
  top: 0;
  width: 40px;
  height: 40px;
  padding: 0;
  border-radius: 0;
  box-shadow: none;
  text-align: center;
  background-color: transparent;
  color: #ff7272;
  line-height: 40px;
  font-size: 36px;
  -webkit-transition: color .3s linear;
  transition: color .3s linear;
}

.btn_number:hover {
  color: #f04444;
}

.btn_number:disabled {
  color: rgba(240, 68, 68, 0.4);
}

.btn_clear {
  background-color: #04b76b;
}

.btn_clear:active {
  padding-top: 8px;
  background-color: #009053;
  border-top: 2px solid #007b47;
}

.btn_clear:hover {
  background-color: #0a9a5d;
}

.btn_min {
  left: 0;
}

.btn_max {
  right: 0;
}

.editor {
  display: block;
  position: relative;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  background: rgba(57, 50, 51, 0.87);
  margin: 0 auto;
}

.editor__paint {
  box-shadow: 0 0 2px rgba(68, 68, 68, 0.6);
  display: block;
  background-color: #fff;
}

.editor__control {
  width: 350px;
  background: #fff;
  position: absolute;
  top: 50%;
  right: 0;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  padding: 15px;
  color: rgba(0, 0, 0, 0.7);
  box-shadow: 0 0 1px rgba(68, 68, 68, 0.6);
  border-bottom-left-radius: 5px;
  border-top-left-radius: 5px;
}

.editor__control-part {
  margin-bottom: 35px;
}

.editor__control-part_margin_m {
  margin-bottom: 40px;
}

.editor__picker {
  position: relative;
}

.editor__picker-colors-wrapper {
  position: relative;
  width: 170px;
  height: 170px;
  border-radius: 1000px;
  overflow: hidden;
  margin-bottom: 25px;
}

.editor__picker-colors-indicator {
  display: block;
  position: absolute;
  top: 77px;
  left: 77px;
  width: 16px;
  height: 16px;
  border-radius: 50%;
  border: 2px solid rgba(57, 50, 51, 0.87);
  z-index: 1;
}

.editor__picker-colors {
  display: block;
  border-radius: 1000px;
  overflow: hidden;
}

.editor__picker-controls {
  position: absolute;
  top: 10px;
  right: 0;
}

.editor__picker-row {
  margin-bottom: 5px;
  font-size: 0;
}

.editor__picker-row_margin_m {
  margin-bottom: 20px;
}

.editor__picker-preview {
  background-color: #0d0e10;
  height: 32px;
  width: 90px;
  box-shadow: 0 0 0 1px #e5e5e5;
  margin-right: 0;
  margin-left: auto;
}

.label {
  display: block;
  margin-bottom: 5px;
  color: rgba(0, 0, 0, 0.7);
  -webkit-transition: all .3s ease-in-out;
  transition: all .3s ease-in-out;
}

.label_val {
  display: inline-block;
  vertical-align: middle;
  width: 32px;
  margin-bottom: 0;
}

.field {
  display: inline-block;
  width: 100%;
  position: relative;
}

.field_val {
  width: 90px;
  vertical-align: middle;
  margin-left: 5px;
}

.field_number {
  width: 150px;
  position: relative;
}

.field__input {
  display: inline-block;
  width: 100%;
  background-color: #fff;
  padding: 9px 5px;
  color: #121212;
  border-radius: 5px;
  outline: 0;
  -webkit-transition: border-color .3s ease-in-out;
  transition: border-color .3s ease-in-out;
  text-transform: uppercase;
  border: 2px solid #e5e5e5;
  font-weight: 700;
}

.field__input:hover {
  border-color: #d5d5d5;
}

.field__input::-webkit-input-placeholder {
  color: #d0cece;
}

.field__input::-webkit-input-placeholder:focus {
  color: transparent;
}

.field__input::-moz-placeholder {
  color: #d0cece;
}

.field__input::-moz-placeholder:focus {
  color: transparent;
}

.field__input:-ms-input-placeholder {
  color: #d0cece;
}

.field__input:-ms-input-placeholder:focus {
  color: transparent;
}

.field__input::-webkit-input-placeholder {
  color: #d0cece;
}

.field__input::-moz-placeholder {
  color: #d0cece;
}

.field__input:-ms-input-placeholder {
  color: #d0cece;
}

.field__input::placeholder {
  color: #d0cece;
}

.field__input::-webkit-input-placeholder:focus {
  color: transparent;
}

.field__input::-moz-placeholder:focus {
  color: transparent;
}

.field__input:-ms-input-placeholder:focus {
  color: transparent;
}

.field__input::placeholder:focus {
  color: transparent;
}

.field__input:focus {
  border-color: #bbb;
}

.field__input_center {
  text-align: center;
}

.field__input_number {
  padding-left: 40px;
  padding-right: 40px;
}

.field-swich {
  position: relative;
  width: 150px;
  text-align: center;
  font-size: 0;
}

.field-swich__label {
  display: inline-block;
  vertical-align: middle;
  cursor: pointer;
  color: rgba(102, 102, 102, 0.7);
  -webkit-transition: all .3s ease-in-out;
  transition: all .3s ease-in-out;
}

.field-swich__label:hover {
  color: rgba(0, 0, 0, 0.7);
}

.field-swich__led {
  display: inline-block;
  vertical-align: middle;
  width: 76px;
  margin: 0 8px;
  height: 40px;
  border: 2px solid #e5e5e5;
  border-radius: 22px;
  position: relative;
  cursor: pointer;
}

.field-swich__led:hover {
  border-color: #d5d5d5;
}

.field-swich__led:hover:after {
  background-color: #f04444;
}

.field-swich__led:after {
  content: '';
  position: absolute;
  width: 18px;
  height: 18px;
  border-radius: 10px;
  background-color: #ff7272;
  top: 0;
  bottom: 0;
  margin: auto 0;
  -webkit-transition: all .3s ease-in-out;
  transition: all .3s ease-in-out;
}

.field-swich__radio {
  display: none;
}

.field-swich__radio_left:checked ~ .field-swich__label_left {
  color: #ff7272;
}

.field-swich__radio_left:checked ~ .field-swich__led:after {
  left: 9px;
}

.field-swich__radio_right:checked ~ .field-swich__label_right {
  color: #ff7272;
}

.field-swich__radio_right:checked ~ .field-swich__led:after {
  left: 44px;
  -webkit-transition: all .3s ease-in-out;
  transition: all .3s ease-in-out;
}

.page__container {
  margin-right: auto;
  margin-left: auto;
  max-width: 960px;
}

.title {
  margin-bottom: 25px;
  text-transform: uppercase;
}

/*# sourceMappingURL=data:application/json;base64, */
